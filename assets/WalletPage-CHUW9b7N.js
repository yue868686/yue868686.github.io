const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/qr-DMA3LBFM.js","assets/antd-D61CRulc.js"])))=>i.map(i=>d[i]);
import{H as S,J as G,q as b,K as rt,L as ne,M as C,N as st,O as Qe,P as it,Q as ot,R as V,S as ct,T as p,U as ut,V as Ne,W as dt,X as pt,Y as lt,Z as yt,$ as _,a0 as Se,a1 as Be,a2 as mt,a3 as ft,a4 as Ke,a5 as gt,a6 as ht,a7 as bt,a8 as wt,a9 as Tt,aa as xt,ab as vt,ac as Pt,ad as Ot,ae as Gt,af as Ct,ag as ke,F as $e,ah as Et,f as re,_ as At}from"./viem-DzTeDfjp.js";import{j as l}from"./qr-DMA3LBFM.js";import{a as Ze,M as se,r as Dt,F as Ut,C as St,S as k,B as I,h as Bt,T as Ve,i as Lt,j as It,k as _e,l as $,m as jt,I as ze}from"./antd-D61CRulc.js";import{g as E,a as L,b as q,c as Le,d as Ft,e as Rt,f as Mt,w as Nt,i as We,h as kt}from"./index-SOiojaBB.js";import{N as $t,T as Vt,a as _t}from"./crypto-BdufoeM_.js";import"./react-Cudyqgo0.js";const zt=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"ret",type:"bytes"}],name:"DelegateAndRevert",type:"error"},{inputs:[{internalType:"uint256",name:"opIndex",type:"uint256"},{internalType:"string",name:"reason",type:"string"}],name:"FailedOp",type:"error"},{inputs:[{internalType:"uint256",name:"opIndex",type:"uint256"},{internalType:"string",name:"reason",type:"string"},{internalType:"bytes",name:"inner",type:"bytes"}],name:"FailedOpWithRevert",type:"error"},{inputs:[],name:"InvalidShortString",type:"error"},{inputs:[{internalType:"bytes",name:"returnData",type:"bytes"}],name:"PostOpReverted",type:"error"},{inputs:[],name:"ReentrancyGuardReentrantCall",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"SenderAddressResult",type:"error"},{inputs:[{internalType:"address",name:"aggregator",type:"address"}],name:"SignatureValidationFailed",type:"error"},{inputs:[{internalType:"string",name:"str",type:"string"}],name:"StringTooLong",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"userOpHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"factory",type:"address"},{indexed:!1,internalType:"address",name:"paymaster",type:"address"}],name:"AccountDeployed",type:"event"},{anonymous:!1,inputs:[],name:"BeforeExecution",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"totalDeposit",type:"uint256"}],name:"Deposited",type:"event"},{anonymous:!1,inputs:[],name:"EIP712DomainChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"userOpHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"bytes",name:"revertReason",type:"bytes"}],name:"PostOpRevertReason",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"aggregator",type:"address"}],name:"SignatureAggregatorChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"},{indexed:!1,internalType:"uint256",name:"unstakeDelaySec",type:"uint256"}],name:"StakeLocked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"withdrawTime",type:"uint256"}],name:"StakeUnlocked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"withdrawAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeWithdrawn",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"userOpHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"paymaster",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"bool",name:"success",type:"bool"},{indexed:!1,internalType:"uint256",name:"actualGasCost",type:"uint256"},{indexed:!1,internalType:"uint256",name:"actualGasUsed",type:"uint256"}],name:"UserOperationEvent",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"userOpHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"UserOperationPrefundTooLow",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"userOpHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"bytes",name:"revertReason",type:"bytes"}],name:"UserOperationRevertReason",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"withdrawAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"},{inputs:[{internalType:"uint32",name:"unstakeDelaySec",type:"uint32"}],name:"addStake",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"delegateAndRevert",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"depositTo",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"eip712Domain",outputs:[{internalType:"bytes1",name:"fields",type:"bytes1"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"version",type:"string"},{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"address",name:"verifyingContract",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"uint256[]",name:"extensions",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getDepositInfo",outputs:[{components:[{internalType:"uint256",name:"deposit",type:"uint256"},{internalType:"bool",name:"staked",type:"bool"},{internalType:"uint112",name:"stake",type:"uint112"},{internalType:"uint32",name:"unstakeDelaySec",type:"uint32"},{internalType:"uint48",name:"withdrawTime",type:"uint48"}],internalType:"struct IStakeManager.DepositInfo",name:"info",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparatorV4",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint192",name:"key",type:"uint192"}],name:"getNonce",outputs:[{internalType:"uint256",name:"nonce",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPackedUserOpTypeHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"}],name:"getSenderAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"bytes32",name:"accountGasLimits",type:"bytes32"},{internalType:"uint256",name:"preVerificationGas",type:"uint256"},{internalType:"bytes32",name:"gasFees",type:"bytes32"},{internalType:"bytes",name:"paymasterAndData",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"}],internalType:"struct PackedUserOperation",name:"userOp",type:"tuple"}],name:"getUserOpHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"bytes32",name:"accountGasLimits",type:"bytes32"},{internalType:"uint256",name:"preVerificationGas",type:"uint256"},{internalType:"bytes32",name:"gasFees",type:"bytes32"},{internalType:"bytes",name:"paymasterAndData",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"}],internalType:"struct PackedUserOperation[]",name:"userOps",type:"tuple[]"},{internalType:"contract IAggregator",name:"aggregator",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],internalType:"struct IEntryPoint.UserOpsPerAggregator[]",name:"opsPerAggregator",type:"tuple[]"},{internalType:"address payable",name:"beneficiary",type:"address"}],name:"handleAggregatedOps",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"bytes32",name:"accountGasLimits",type:"bytes32"},{internalType:"uint256",name:"preVerificationGas",type:"uint256"},{internalType:"bytes32",name:"gasFees",type:"bytes32"},{internalType:"bytes",name:"paymasterAndData",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"}],internalType:"struct PackedUserOperation[]",name:"ops",type:"tuple[]"},{internalType:"address payable",name:"beneficiary",type:"address"}],name:"handleOps",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint192",name:"key",type:"uint192"}],name:"incrementNonce",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"callData",type:"bytes"},{components:[{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"verificationGasLimit",type:"uint256"},{internalType:"uint256",name:"callGasLimit",type:"uint256"},{internalType:"uint256",name:"paymasterVerificationGasLimit",type:"uint256"},{internalType:"uint256",name:"paymasterPostOpGasLimit",type:"uint256"},{internalType:"uint256",name:"preVerificationGas",type:"uint256"},{internalType:"address",name:"paymaster",type:"address"},{internalType:"uint256",name:"maxFeePerGas",type:"uint256"},{internalType:"uint256",name:"maxPriorityFeePerGas",type:"uint256"}],internalType:"struct EntryPoint.MemoryUserOp",name:"mUserOp",type:"tuple"},{internalType:"bytes32",name:"userOpHash",type:"bytes32"},{internalType:"uint256",name:"prefund",type:"uint256"},{internalType:"uint256",name:"contextOffset",type:"uint256"},{internalType:"uint256",name:"preOpGas",type:"uint256"}],internalType:"struct EntryPoint.UserOpInfo",name:"opInfo",type:"tuple"},{internalType:"bytes",name:"context",type:"bytes"}],name:"innerHandleOp",outputs:[{internalType:"uint256",name:"actualGasCost",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint192",name:"",type:"uint192"}],name:"nonceSequenceNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"senderCreator",outputs:[{internalType:"contract ISenderCreator",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"unlockStake",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"withdrawAddress",type:"address"}],name:"withdrawStake",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"withdrawAddress",type:"address"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"}],name:"withdrawTo",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}];function Wt(e){const{authorization:t,factory:a,factoryData:n}=e;if(a==="0x7702"||a==="0x7702000000000000000000000000000000000000"){if(!t)return"0x7702000000000000000000000000000000000000";const r=t.address;return S([r,n??"0x"])}return a?S([a,n??"0x"]):"0x"}function Ht(e){const{callGasLimit:t,callData:a,maxPriorityFeePerGas:n,maxFeePerGas:r,paymaster:c,paymasterData:s,paymasterPostOpGasLimit:i,paymasterVerificationGasLimit:o,sender:d,signature:y="0x",verificationGasLimit:f}=e,g=S([G(b(f||0n),{size:16}),G(b(t||0n),{size:16})]),u=Wt(e),w=S([G(b(n||0n),{size:16}),G(b(r||0n),{size:16})]),T=e.nonce??0n,x=c?S([c,G(b(o||0n),{size:16}),G(b(i||0n),{size:16}),s||"0x"]):"0x",v=e.preVerificationGas??0n;return{accountGasLimits:g,callData:a,initCode:u,gasFees:w,nonce:T,paymasterAndData:x,preVerificationGas:v,sender:d,signature:y}}const Xt={PackedUserOperation:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes",name:"initCode"},{type:"bytes",name:"callData"},{type:"bytes32",name:"accountGasLimits"},{type:"uint256",name:"preVerificationGas"},{type:"bytes32",name:"gasFees"},{type:"bytes",name:"paymasterAndData"}]};function Qt(e){const{chainId:t,entryPointAddress:a,userOperation:n}=e,r=Ht(n);return{types:Xt,primaryType:"PackedUserOperation",domain:{name:"ERC4337",version:"1",chainId:t,verifyingContract:a},message:r}}async function Kt(e){const{extend:t,nonceKeyManager:a=rt({source:{get(){return Date.now()},set(){}}}),...n}=e;let r=!1;const c=await e.getAddress();return{...t,...n,address:c,async getFactoryArgs(){return"isDeployed"in this&&await this.isDeployed()?{factory:void 0,factoryData:void 0}:e.getFactoryArgs()},async getNonce(s){const i=s?.key??BigInt(await a.consume({address:c,chainId:e.client.chain.id,client:e.client}));return e.getNonce?await e.getNonce({...s,key:i}):await st(e.client,{abi:Qe(["function getNonce(address, uint192) pure returns (uint256)"]),address:e.entryPoint.address,functionName:"getNonce",args:[c,i]})},async isDeployed(){return r?!0:(r=!!await C(e.client,it,"getCode")({address:c}),r)},...e.sign?{async sign(s){const[{factory:i,factoryData:o},d]=await Promise.all([this.getFactoryArgs(),e.sign(s)]);return i&&o?ne({address:i,data:o,signature:d}):d}}:{},async signMessage(s){const[{factory:i,factoryData:o},d]=await Promise.all([this.getFactoryArgs(),e.signMessage(s)]);return i&&o&&i!=="0x7702"?ne({address:i,data:o,signature:d}):d},async signTypedData(s){const[{factory:i,factoryData:o},d]=await Promise.all([this.getFactoryArgs(),e.signTypedData(s)]);return i&&o&&i!=="0x7702"?ne({address:i,data:o,signature:d}):d},type:"smart"}}async function Zt(e){const{client:t,implementation:a="0xe6Cae83BdE06E4c305530e199D7217f42808555B",getNonce:n,owner:r}=e,c={abi:zt,address:ot,version:"0.8"};return Kt({authorization:{account:r,address:a},abi:j,client:t,extend:{abi:j,owner:r},entryPoint:c,getNonce:n,async decodeCalls(s){const i=ct({abi:j,data:s});if(i.functionName==="execute")return[{to:i.args[0],value:i.args[1],data:i.args[2]}];if(i.functionName==="executeBatch")return i.args[0].map(o=>({to:o.target,value:o.value,data:o.data}));throw new p(`unable to decode calls for "${i.functionName}"`)},async encodeCalls(s){return s.length===1?V({abi:j,functionName:"execute",args:[s[0].to,s[0].value??0n,s[0].data??"0x"]}):V({abi:j,functionName:"executeBatch",args:[s.map(i=>({data:i.data??"0x",target:i.to,value:i.value??0n}))]})},async getAddress(){return r.address},async getFactoryArgs(){return{factory:"0x7702",factoryData:"0x"}},async getStubSignature(){return"0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c"},async signMessage(s){const{message:i}=s;return await r.signMessage({message:i})},async signTypedData(s){const{domain:i,types:o,primaryType:d,message:y}=s;return await r.signTypedData({domain:i,message:y,primaryType:d,types:o})},async signUserOperation(s){const{chainId:i=t.chain.id,...o}=s,d=await this.getAddress(),y=Qt({chainId:i,entryPointAddress:c.address,userOperation:{...o,sender:d}});return await r.signTypedData(y)}})}const j=[{inputs:[],name:"ECDSAInvalidSignature",type:"error"},{inputs:[{internalType:"uint256",name:"length",type:"uint256"}],name:"ECDSAInvalidSignatureLength",type:"error"},{inputs:[{internalType:"bytes32",name:"s",type:"bytes32"}],name:"ECDSAInvalidSignatureS",type:"error"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"bytes",name:"error",type:"bytes"}],name:"ExecuteError",type:"error"},{stateMutability:"payable",type:"fallback"},{inputs:[],name:"entryPoint",outputs:[{internalType:"contract IEntryPoint",name:"",type:"address"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"execute",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct BaseAccount.Call[]",name:"calls",type:"tuple[]"}],name:"executeBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"isValidSignature",outputs:[{internalType:"bytes4",name:"magicValue",type:"bytes4"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155BatchReceived",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC721Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"id",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"pure",type:"function"},{inputs:[{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"bytes32",name:"accountGasLimits",type:"bytes32"},{internalType:"uint256",name:"preVerificationGas",type:"uint256"},{internalType:"bytes32",name:"gasFees",type:"bytes32"},{internalType:"bytes",name:"paymasterAndData",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"}],internalType:"struct PackedUserOperation",name:"userOp",type:"tuple"},{internalType:"bytes32",name:"userOpHash",type:"bytes32"},{internalType:"uint256",name:"missingAccountFunds",type:"uint256"}],name:"validateUserOp",outputs:[{internalType:"uint256",name:"validationData",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}];class ie extends p{constructor({cause:t}){super("Smart Account is not deployed.",{cause:t,metaMessages:["This could arise when:","- No `factory`/`factoryData` or `initCode` properties are provided for Smart Account deployment.","- An incorrect `sender` address is provided."],name:"AccountNotDeployedError"})}}Object.defineProperty(ie,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa20/});class B extends p{constructor({cause:t,data:a,message:n}={}){const r=n?.replace("execution reverted: ","")?.replace("execution reverted","");super(`Execution reverted ${r?`with reason: ${r}`:"for an unknown reason"}.`,{cause:t,name:"ExecutionRevertedError"}),Object.defineProperty(this,"data",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.data=a}}Object.defineProperty(B,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32521});Object.defineProperty(B,"message",{enumerable:!0,configurable:!0,writable:!0,value:/execution reverted/});class oe extends p{constructor({cause:t}){super("Failed to send funds to beneficiary.",{cause:t,name:"FailedToSendToBeneficiaryError"})}}Object.defineProperty(oe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa91/});class ce extends p{constructor({cause:t}){super("Gas value overflowed.",{cause:t,metaMessages:["This could arise when:","- one of the gas values exceeded 2**120 (uint120)"].filter(Boolean),name:"GasValuesOverflowError"})}}Object.defineProperty(ce,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa94/});class ue extends p{constructor({cause:t}){super("The `handleOps` function was called by the Bundler with a gas limit too low.",{cause:t,name:"HandleOpsOutOfGasError"})}}Object.defineProperty(ue,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa95/});class de extends p{constructor({cause:t,factory:a,factoryData:n,initCode:r}){super("Failed to simulate deployment for Smart Account.",{cause:t,metaMessages:["This could arise when:","- Invalid `factory`/`factoryData` or `initCode` properties are present","- Smart Account deployment execution ran out of gas (low `verificationGasLimit` value)",`- Smart Account deployment execution reverted with an error
`,a&&`factory: ${a}`,n&&`factoryData: ${n}`,r&&`initCode: ${r}`].filter(Boolean),name:"InitCodeFailedError"})}}Object.defineProperty(de,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa13/});class pe extends p{constructor({cause:t,factory:a,factoryData:n,initCode:r}){super("Smart Account initialization implementation did not create an account.",{cause:t,metaMessages:["This could arise when:","- `factory`/`factoryData` or `initCode` properties are invalid",`- Smart Account initialization implementation is incorrect
`,a&&`factory: ${a}`,n&&`factoryData: ${n}`,r&&`initCode: ${r}`].filter(Boolean),name:"InitCodeMustCreateSenderError"})}}Object.defineProperty(pe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa15/});class le extends p{constructor({cause:t,factory:a,factoryData:n,initCode:r,sender:c}){super("Smart Account initialization implementation does not return the expected sender.",{cause:t,metaMessages:["This could arise when:",`Smart Account initialization implementation does not return a sender address
`,a&&`factory: ${a}`,n&&`factoryData: ${n}`,r&&`initCode: ${r}`,c&&`sender: ${c}`].filter(Boolean),name:"InitCodeMustReturnSenderError"})}}Object.defineProperty(le,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa14/});class ye extends p{constructor({cause:t}){super("Smart Account does not have sufficient funds to execute the User Operation.",{cause:t,metaMessages:["This could arise when:","- the Smart Account does not have sufficient funds to cover the required prefund, or","- a Paymaster was not provided"].filter(Boolean),name:"InsufficientPrefundError"})}}Object.defineProperty(ye,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa21/});class me extends p{constructor({cause:t}){super("Bundler attempted to call an invalid function on the EntryPoint.",{cause:t,name:"InternalCallOnlyError"})}}Object.defineProperty(me,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa92/});class fe extends p{constructor({cause:t}){super("Bundler used an invalid aggregator for handling aggregated User Operations.",{cause:t,name:"InvalidAggregatorError"})}}Object.defineProperty(fe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa96/});class ge extends p{constructor({cause:t,nonce:a}){super("Invalid Smart Account nonce used for User Operation.",{cause:t,metaMessages:[a&&`nonce: ${a}`].filter(Boolean),name:"InvalidAccountNonceError"})}}Object.defineProperty(ge,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa25/});class he extends p{constructor({cause:t}){super("Bundler has not set a beneficiary address.",{cause:t,name:"InvalidBeneficiaryError"})}}Object.defineProperty(he,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa90/});class z extends p{constructor({cause:t}){super("Invalid fields set on User Operation.",{cause:t,name:"InvalidFieldsError"})}}Object.defineProperty(z,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32602});class be extends p{constructor({cause:t,paymasterAndData:a}){super("Paymaster properties provided are invalid.",{cause:t,metaMessages:["This could arise when:","- the `paymasterAndData` property is of an incorrect length\n",a&&`paymasterAndData: ${a}`].filter(Boolean),name:"InvalidPaymasterAndDataError"})}}Object.defineProperty(be,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa93/});class D extends p{constructor({cause:t}){super("Paymaster deposit for the User Operation is too low.",{cause:t,metaMessages:["This could arise when:","- the Paymaster has deposited less than the expected amount via the `deposit` function"].filter(Boolean),name:"PaymasterDepositTooLowError"})}}Object.defineProperty(D,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32508});Object.defineProperty(D,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa31/});class we extends p{constructor({cause:t}){super("The `validatePaymasterUserOp` function on the Paymaster reverted.",{cause:t,name:"PaymasterFunctionRevertedError"})}}Object.defineProperty(we,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa33/});class Te extends p{constructor({cause:t}){super("The Paymaster contract has not been deployed.",{cause:t,name:"PaymasterNotDeployedError"})}}Object.defineProperty(Te,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa30/});class W extends p{constructor({cause:t}){super("UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.",{cause:t,name:"PaymasterRateLimitError"})}}Object.defineProperty(W,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32504});class H extends p{constructor({cause:t}){super("UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.",{cause:t,name:"PaymasterStakeTooLowError"})}}Object.defineProperty(H,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32505});class xe extends p{constructor({cause:t}){super("Paymaster `postOp` function reverted.",{cause:t,name:"PaymasterPostOpFunctionRevertedError"})}}Object.defineProperty(xe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa50/});class ve extends p{constructor({cause:t,factory:a,factoryData:n,initCode:r}){super("Smart Account has already been deployed.",{cause:t,metaMessages:["Remove the following properties and try again:",a&&"`factory`",n&&"`factoryData`",r&&"`initCode`"].filter(Boolean),name:"SenderAlreadyConstructedError"})}}Object.defineProperty(ve,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa10/});class X extends p{constructor({cause:t}){super("UserOperation rejected because account signature check failed (or paymaster signature, if the paymaster uses its data as signature).",{cause:t,name:"SignatureCheckFailedError"})}}Object.defineProperty(X,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32507});class Pe extends p{constructor({cause:t}){super("The `validateUserOp` function on the Smart Account reverted.",{cause:t,name:"SmartAccountFunctionRevertedError"})}}Object.defineProperty(Pe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa23/});class Q extends p{constructor({cause:t}){super("UserOperation rejected because account specified unsupported signature aggregator.",{cause:t,name:"UnsupportedSignatureAggregatorError"})}}Object.defineProperty(Q,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32506});class Oe extends p{constructor({cause:t}){super("User Operation expired.",{cause:t,metaMessages:["This could arise when:","- the `validAfter` or `validUntil` values returned from `validateUserOp` on the Smart Account are not satisfied"].filter(Boolean),name:"UserOperationExpiredError"})}}Object.defineProperty(Oe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa22/});class Ge extends p{constructor({cause:t}){super("Paymaster for User Operation expired.",{cause:t,metaMessages:["This could arise when:","- the `validAfter` or `validUntil` values returned from `validatePaymasterUserOp` on the Paymaster are not satisfied"].filter(Boolean),name:"UserOperationPaymasterExpiredError"})}}Object.defineProperty(Ge,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa32/});class Ce extends p{constructor({cause:t}){super("Signature provided for the User Operation is invalid.",{cause:t,metaMessages:["This could arise when:","- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Smart Account"].filter(Boolean),name:"UserOperationSignatureError"})}}Object.defineProperty(Ce,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa24/});class Ee extends p{constructor({cause:t}){super("Signature provided for the User Operation is invalid.",{cause:t,metaMessages:["This could arise when:","- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Paymaster"].filter(Boolean),name:"UserOperationPaymasterSignatureError"})}}Object.defineProperty(Ee,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa34/});class K extends p{constructor({cause:t}){super("User Operation rejected by EntryPoint's `simulateValidation` during account creation or validation.",{cause:t,name:"UserOperationRejectedByEntryPointError"})}}Object.defineProperty(K,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32500});class Z extends p{constructor({cause:t}){super("User Operation rejected by Paymaster's `validatePaymasterUserOp`.",{cause:t,name:"UserOperationRejectedByPaymasterError"})}}Object.defineProperty(Z,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32501});class J extends p{constructor({cause:t}){super("User Operation rejected with op code validation error.",{cause:t,name:"UserOperationRejectedByOpCodeError"})}}Object.defineProperty(J,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32502});class Y extends p{constructor({cause:t}){super("UserOperation out of time-range: either wallet or paymaster returned a time-range, and it is already expired (or will expire soon).",{cause:t,name:"UserOperationOutOfTimeRangeError"})}}Object.defineProperty(Y,"code",{enumerable:!0,configurable:!0,writable:!0,value:-32503});class Jt extends p{constructor({cause:t}){super(`An error occurred while executing user operation: ${t?.shortMessage}`,{cause:t,name:"UnknownBundlerError"})}}class Ae extends p{constructor({cause:t}){super("User Operation verification gas limit exceeded.",{cause:t,metaMessages:["This could arise when:","- the gas used for verification exceeded the `verificationGasLimit`"].filter(Boolean),name:"VerificationGasLimitExceededError"})}}Object.defineProperty(Ae,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa40/});class De extends p{constructor({cause:t}){super("User Operation verification gas limit is too low.",{cause:t,metaMessages:["This could arise when:","- the `verificationGasLimit` is too low to verify the User Operation"].filter(Boolean),name:"VerificationGasLimitTooLowError"})}}Object.defineProperty(De,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa41/});class Yt extends p{constructor(t,{callData:a,callGasLimit:n,docsPath:r,factory:c,factoryData:s,initCode:i,maxFeePerGas:o,maxPriorityFeePerGas:d,nonce:y,paymaster:f,paymasterAndData:g,paymasterData:u,paymasterPostOpGasLimit:w,paymasterVerificationGasLimit:T,preVerificationGas:x,sender:v,signature:O,verificationGasLimit:P}){const A=ut({callData:a,callGasLimit:n,factory:c,factoryData:s,initCode:i,maxFeePerGas:typeof o<"u"&&`${Ne(o)} gwei`,maxPriorityFeePerGas:typeof d<"u"&&`${Ne(d)} gwei`,nonce:y,paymaster:f,paymasterAndData:g,paymasterData:u,paymasterPostOpGasLimit:w,paymasterVerificationGasLimit:T,preVerificationGas:x,sender:v,signature:O,verificationGasLimit:P});super(t.shortMessage,{cause:t,docsPath:r,metaMessages:[...t.metaMessages?[...t.metaMessages," "]:[],"Request Arguments:",A].filter(Boolean),name:"UserOperationExecutionError"}),Object.defineProperty(this,"cause",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.cause=t}}class qt extends p{constructor({hash:t}){super(`User Operation receipt with hash "${t}" could not be found. The User Operation may not have been processed yet.`,{name:"UserOperationReceiptNotFoundError"})}}class ea extends p{constructor({hash:t}){super(`User Operation with hash "${t}" could not be found.`,{name:"UserOperationNotFoundError"})}}class He extends p{constructor({hash:t}){super(`Timed out while waiting for User Operation with hash "${t}" to be confirmed.`,{name:"WaitForUserOperationReceiptTimeoutError"})}}const ta=[B,z,D,W,H,X,Q,Y,K,Z,J];function aa(e,t){const a=(e.details||"").toLowerCase();if(ie.message.test(a))return new ie({cause:e});if(oe.message.test(a))return new oe({cause:e});if(ce.message.test(a))return new ce({cause:e});if(ue.message.test(a))return new ue({cause:e});if(de.message.test(a))return new de({cause:e,factory:t.factory,factoryData:t.factoryData,initCode:t.initCode});if(pe.message.test(a))return new pe({cause:e,factory:t.factory,factoryData:t.factoryData,initCode:t.initCode});if(le.message.test(a))return new le({cause:e,factory:t.factory,factoryData:t.factoryData,initCode:t.initCode,sender:t.sender});if(ye.message.test(a))return new ye({cause:e});if(me.message.test(a))return new me({cause:e});if(ge.message.test(a))return new ge({cause:e,nonce:t.nonce});if(fe.message.test(a))return new fe({cause:e});if(he.message.test(a))return new he({cause:e});if(be.message.test(a))return new be({cause:e});if(D.message.test(a))return new D({cause:e});if(we.message.test(a))return new we({cause:e});if(Te.message.test(a))return new Te({cause:e});if(xe.message.test(a))return new xe({cause:e});if(Pe.message.test(a))return new Pe({cause:e});if(ve.message.test(a))return new ve({cause:e,factory:t.factory,factoryData:t.factoryData,initCode:t.initCode});if(Oe.message.test(a))return new Oe({cause:e});if(Ge.message.test(a))return new Ge({cause:e});if(Ee.message.test(a))return new Ee({cause:e});if(Ce.message.test(a))return new Ce({cause:e});if(Ae.message.test(a))return new Ae({cause:e});if(De.message.test(a))return new De({cause:e});const n=e.walk(r=>ta.some(c=>c.code===r.code));if(n){if(n.code===B.code)return new B({cause:e,data:n.data,message:n.details});if(n.code===z.code)return new z({cause:e});if(n.code===D.code)return new D({cause:e});if(n.code===W.code)return new W({cause:e});if(n.code===H.code)return new H({cause:e});if(n.code===X.code)return new X({cause:e});if(n.code===Q.code)return new Q({cause:e});if(n.code===Y.code)return new Y({cause:e});if(n.code===K.code)return new K({cause:e});if(n.code===Z.code)return new Z({cause:e});if(n.code===J.code)return new J({cause:e})}return new Jt({cause:e})}function Je(e,{calls:t,docsPath:a,...n}){const r=(()=>{const c=aa(e,n);if(t&&c instanceof B){const s=na(c),i=t?.filter(o=>o.abi);if(s&&i.length>0)return ra({calls:i,revertData:s})}return c})();return new Yt(r,{docsPath:a,...n})}function na(e){let t;return e.walk(a=>{const n=a;if(typeof n.data=="string"||typeof n.data?.revertData=="string"||!(n instanceof p)&&typeof n.message=="string"){const r=(n.data?.revertData||n.data||n.message).match?.(/(0x[A-Za-z0-9]*)/);if(r)return t=r[1],!0}return!1}),t}function ra(e){const{calls:t,revertData:a}=e,{abi:n,functionName:r,args:c,to:s}=(()=>{const o=t?.filter(y=>!!y.abi);if(o.length===1)return o[0];const d=o.filter(y=>{try{return!!dt({abi:y.abi,data:a})}catch{return!1}});return d.length===1?d[0]:{abi:[],functionName:o.reduce((y,f)=>`${y?`${y} | `:""}${f.functionName}`,""),args:void 0,to:void 0}})(),i=a==="0x"?new pt({functionName:r}):new lt({abi:n,data:a,functionName:r});return new yt(i,{abi:n,args:c,contractAddress:s,functionName:r})}function sa(e){const t={};return e.callGasLimit&&(t.callGasLimit=BigInt(e.callGasLimit)),e.preVerificationGas&&(t.preVerificationGas=BigInt(e.preVerificationGas)),e.verificationGasLimit&&(t.verificationGasLimit=BigInt(e.verificationGasLimit)),e.paymasterPostOpGasLimit&&(t.paymasterPostOpGasLimit=BigInt(e.paymasterPostOpGasLimit)),e.paymasterVerificationGasLimit&&(t.paymasterVerificationGasLimit=BigInt(e.paymasterVerificationGasLimit)),t}function ee(e){const t={};return typeof e.callData<"u"&&(t.callData=e.callData),typeof e.callGasLimit<"u"&&(t.callGasLimit=b(e.callGasLimit)),typeof e.factory<"u"&&(t.factory=e.factory),typeof e.factoryData<"u"&&(t.factoryData=e.factoryData),typeof e.initCode<"u"&&(t.initCode=e.initCode),typeof e.maxFeePerGas<"u"&&(t.maxFeePerGas=b(e.maxFeePerGas)),typeof e.maxPriorityFeePerGas<"u"&&(t.maxPriorityFeePerGas=b(e.maxPriorityFeePerGas)),typeof e.nonce<"u"&&(t.nonce=b(e.nonce)),typeof e.paymaster<"u"&&(t.paymaster=e.paymaster),typeof e.paymasterAndData<"u"&&(t.paymasterAndData=e.paymasterAndData||"0x"),typeof e.paymasterData<"u"&&(t.paymasterData=e.paymasterData),typeof e.paymasterPostOpGasLimit<"u"&&(t.paymasterPostOpGasLimit=b(e.paymasterPostOpGasLimit)),typeof e.paymasterVerificationGasLimit<"u"&&(t.paymasterVerificationGasLimit=b(e.paymasterVerificationGasLimit)),typeof e.preVerificationGas<"u"&&(t.preVerificationGas=b(e.preVerificationGas)),typeof e.sender<"u"&&(t.sender=e.sender),typeof e.signature<"u"&&(t.signature=e.signature),typeof e.verificationGasLimit<"u"&&(t.verificationGasLimit=b(e.verificationGasLimit)),typeof e.authorization<"u"&&(t.eip7702Auth=ia(e.authorization)),t}function ia(e){return{address:e.address,chainId:b(e.chainId),nonce:b(e.nonce),r:e.r?b(BigInt(e.r),{size:32}):G("0x",{size:32}),s:e.s?b(BigInt(e.s),{size:32}):G("0x",{size:32}),yParity:e.yParity?b(e.yParity,{size:1}):G("0x",{size:32})}}async function oa(e,t){const{chainId:a,entryPointAddress:n,context:r,...c}=t,s=ee(c),{paymasterPostOpGasLimit:i,paymasterVerificationGasLimit:o,...d}=await e.request({method:"pm_getPaymasterData",params:[{...s,callGasLimit:s.callGasLimit??"0x0",verificationGasLimit:s.verificationGasLimit??"0x0",preVerificationGas:s.preVerificationGas??"0x0"},n,b(a),r]});return{...d,...i&&{paymasterPostOpGasLimit:_(i)},...o&&{paymasterVerificationGasLimit:_(o)}}}async function ca(e,t){const{chainId:a,entryPointAddress:n,context:r,...c}=t,s=ee(c),{paymasterPostOpGasLimit:i,paymasterVerificationGasLimit:o,...d}=await e.request({method:"pm_getPaymasterStubData",params:[{...s,callGasLimit:s.callGasLimit??"0x0",verificationGasLimit:s.verificationGasLimit??"0x0",preVerificationGas:s.preVerificationGas??"0x0"},n,b(a),r]});return{...d,...i&&{paymasterPostOpGasLimit:_(i)},...o&&{paymasterVerificationGasLimit:_(o)}}}const ua=["factory","fees","gas","paymaster","nonce","signature","authorization"];async function Ie(e,t){const a=t,{account:n=e.account,parameters:r=ua,stateOverride:c}=a;if(!n)throw new Se;const s=Be(n),i=e,o=a.paymaster??i?.paymaster,d=typeof o=="string"?o:void 0,{getPaymasterStubData:y,getPaymasterData:f}=(()=>{if(o===!0)return{getPaymasterStubData:m=>C(i,ca,"getPaymasterStubData")(m),getPaymasterData:m=>C(i,oa,"getPaymasterData")(m)};if(typeof o=="object"){const{getPaymasterStubData:m,getPaymasterData:h}=o;return{getPaymasterStubData:h&&m?m:h,getPaymasterData:h&&m?h:void 0}}return{getPaymasterStubData:void 0,getPaymasterData:void 0}})(),g=a.paymasterContext?a.paymasterContext:i?.paymasterContext;let u={...a,paymaster:d,sender:s.address};const[w,T,x,v,O]=await Promise.all([(async()=>a.calls?s.encodeCalls(a.calls.map(m=>{const h=m;return h.abi?{data:V(h),to:h.to,value:h.value}:h})):a.callData)(),(async()=>{if(!r.includes("factory"))return;if(a.initCode)return{initCode:a.initCode};if(a.factory&&a.factoryData)return{factory:a.factory,factoryData:a.factoryData};const{factory:m,factoryData:h}=await s.getFactoryArgs();return s.entryPoint.version==="0.6"?{initCode:m&&h?S([m,h]):void 0}:{factory:m,factoryData:h}})(),(async()=>{if(r.includes("fees")){if(typeof a.maxFeePerGas=="bigint"&&typeof a.maxPriorityFeePerGas=="bigint")return u;if(i?.userOperation?.estimateFeesPerGas){const m=await i.userOperation.estimateFeesPerGas({account:s,bundlerClient:i,userOperation:u});return{...u,...m}}try{const m=i.client??e,h=await C(m,mt,"estimateFeesPerGas")({chain:m.chain,type:"eip1559"});return{maxFeePerGas:typeof a.maxFeePerGas=="bigint"?a.maxFeePerGas:BigInt(2n*h.maxFeePerGas),maxPriorityFeePerGas:typeof a.maxPriorityFeePerGas=="bigint"?a.maxPriorityFeePerGas:BigInt(2n*h.maxPriorityFeePerGas)}}catch{return}}})(),(async()=>{if(r.includes("nonce"))return typeof a.nonce=="bigint"?a.nonce:s.getNonce()})(),(async()=>{if(r.includes("authorization")){if(typeof a.authorization=="object")return a.authorization;if(s.authorization&&!await s.isDeployed())return{...await ft(s.client,s.authorization),r:"0xfffffffffffffffffffffffffffffff000000000000000000000000000000000",s:"0x7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",yParity:1}}})()]);typeof w<"u"&&(u.callData=w),typeof T<"u"&&(u={...u,...T}),typeof x<"u"&&(u={...u,...x}),typeof v<"u"&&(u.nonce=v),typeof O<"u"&&(u.authorization=O),r.includes("signature")&&(typeof a.signature<"u"?u.signature=a.signature:u.signature=await s.getStubSignature(u)),s.entryPoint.version==="0.6"&&!u.initCode&&(u.initCode="0x");let P;async function A(){return P||(e.chain?e.chain.id:(P=await C(e,Ke,"getChainId")({}),P))}let te=!1;if(r.includes("paymaster")&&y&&!d&&!a.paymasterAndData){const{isFinal:m=!1,sponsor:h,...Fe}=await y({chainId:await A(),entryPointAddress:s.entryPoint.address,context:g,...u});te=m,u={...u,...Fe}}if(s.entryPoint.version==="0.6"&&!u.paymasterAndData&&(u.paymasterAndData="0x"),r.includes("gas")){if(s.userOperation?.estimateGas){const m=await s.userOperation.estimateGas(u);u={...u,...m}}if(typeof u.callGasLimit>"u"||typeof u.preVerificationGas>"u"||typeof u.verificationGasLimit>"u"||u.paymaster&&typeof u.paymasterPostOpGasLimit>"u"||u.paymaster&&typeof u.paymasterVerificationGasLimit>"u"){const m=await C(i,Ye,"estimateUserOperationGas")({account:s,callGasLimit:0n,preVerificationGas:0n,verificationGasLimit:0n,stateOverride:c,...u.paymaster?{paymasterPostOpGasLimit:0n,paymasterVerificationGasLimit:0n}:{},...u});u={...u,callGasLimit:u.callGasLimit??m.callGasLimit,preVerificationGas:u.preVerificationGas??m.preVerificationGas,verificationGasLimit:u.verificationGasLimit??m.verificationGasLimit,paymasterPostOpGasLimit:u.paymasterPostOpGasLimit??m.paymasterPostOpGasLimit,paymasterVerificationGasLimit:u.paymasterVerificationGasLimit??m.paymasterVerificationGasLimit}}}if(r.includes("paymaster")&&f&&!d&&!a.paymasterAndData&&!te){const m=await f({chainId:await A(),entryPointAddress:s.entryPoint.address,context:g,...u});u={...u,...m}}return delete u.calls,delete u.parameters,delete u.paymasterContext,typeof u.paymaster!="string"&&delete u.paymaster,u}async function Ye(e,t){const{account:a=e.account,entryPointAddress:n,stateOverride:r}=t;if(!a&&!t.sender)throw new Se;const c=a?Be(a):void 0,s=gt(r),i=c?await C(e,Ie,"prepareUserOperation")({...t,parameters:["authorization","factory","nonce","paymaster","signature"]}):t;try{const o=[ee(i),n??c?.entryPoint?.address],d=await e.request({method:"eth_estimateUserOperationGas",params:s?[...o,s]:[...o]});return sa(d)}catch(o){const d=t.calls;throw Je(o,{...i,...d?{calls:d}:{}})}}function da(e){return e.request({method:"eth_supportedEntryPoints"})}function pa(e){const t={...e};return e.callGasLimit&&(t.callGasLimit=BigInt(e.callGasLimit)),e.maxFeePerGas&&(t.maxFeePerGas=BigInt(e.maxFeePerGas)),e.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=BigInt(e.maxPriorityFeePerGas)),e.nonce&&(t.nonce=BigInt(e.nonce)),e.paymasterPostOpGasLimit&&(t.paymasterPostOpGasLimit=BigInt(e.paymasterPostOpGasLimit)),e.paymasterVerificationGasLimit&&(t.paymasterVerificationGasLimit=BigInt(e.paymasterVerificationGasLimit)),e.preVerificationGas&&(t.preVerificationGas=BigInt(e.preVerificationGas)),e.verificationGasLimit&&(t.verificationGasLimit=BigInt(e.verificationGasLimit)),t}async function la(e,{hash:t}){const a=await e.request({method:"eth_getUserOperationByHash",params:[t]},{dedupe:!0});if(!a)throw new ea({hash:t});const{blockHash:n,blockNumber:r,entryPoint:c,transactionHash:s,userOperation:i}=a;return{blockHash:n,blockNumber:BigInt(r),entryPoint:c,transactionHash:s,userOperation:pa(i)}}function ya(e){const t={...e};return e.actualGasCost&&(t.actualGasCost=BigInt(e.actualGasCost)),e.actualGasUsed&&(t.actualGasUsed=BigInt(e.actualGasUsed)),e.logs&&(t.logs=e.logs.map(a=>ht(a))),e.receipt&&(t.receipt=bt(t.receipt)),t}async function qe(e,{hash:t}){const a=await e.request({method:"eth_getUserOperationReceipt",params:[t]},{dedupe:!0});if(!a)throw new qt({hash:t});return ya(a)}async function ma(e,t){const{account:a=e.account,entryPointAddress:n}=t;if(!a&&!t.sender)throw new Se;const r=a?Be(a):void 0,c=r?await C(e,Ie,"prepareUserOperation")(t):t,s=t.signature||await r?.signUserOperation?.(c),i=ee({...c,signature:s});try{return await e.request({method:"eth_sendUserOperation",params:[i,n??r?.entryPoint?.address]},{retryCount:0})}catch(o){const d=t.calls;throw Je(o,{...c,...d?{calls:d}:{},signature:s})}}function fa(e,t){const{hash:a,pollingInterval:n=e.pollingInterval,retryCount:r,timeout:c=12e4}=t;let s=0;const i=wt(["waitForUserOperationReceipt",e.uid,a]);return new Promise((o,d)=>{const y=Tt(i,{resolve:o,reject:d},f=>{const g=w=>{u(),w(),y()},u=xt(async()=>{r&&s>=r&&g(()=>f.reject(new He({hash:a})));try{const w=await C(e,qe,"getUserOperationReceipt")({hash:a});g(()=>f.resolve(w))}catch(w){const T=w;T.name!=="UserOperationReceiptNotFoundError"&&g(()=>f.reject(T))}s++},{emitOnBegin:!0,interval:n});return c&&setTimeout(()=>g(()=>f.reject(new He({hash:a}))),c),u})})}function ga(e){return{estimateUserOperationGas:t=>Ye(e,t),getChainId:()=>Ke(e),getSupportedEntryPoints:()=>da(e),getUserOperation:t=>la(e,t),getUserOperationReceipt:t=>qe(e,t),prepareUserOperation:t=>Ie(e,t),sendUserOperation:t=>ma(e,t),waitForUserOperationReceipt:t=>fa(e,t)}}function Xe(e){const{client:t,key:a="bundler",name:n="Bundler Client",paymaster:r,paymasterContext:c,transport:s,userOperation:i}=e;return Object.assign(vt({...e,chain:e.chain??t?.chain,key:a,name:n,transport:s,type:"bundlerClient"}),{client:t,paymaster:r,paymasterContext:c,userOperation:i}).extend(ga)}async function ha({token:e,chain:t,ownerAddress:a,spenderAddress:n,value:r}){return{types:{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},primaryType:"Permit",domain:{name:await e.read.name(),version:await e.read.version(),chainId:t.id,verifyingContract:e.address},message:{owner:a,spender:n,value:r,nonce:await e.read.nonces([a]),deadline:Gt}}}const ba=[...Ct,{inputs:[{internalType:"address",name:"owner",type:"address"}],stateMutability:"view",type:"function",name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}]},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];async function wa({tokenAddress:e,client:t,account:a,spenderAddress:n,permitAmount:r}){const c=Pt({client:t,address:e,abi:ba}),s=await ha({token:c,chain:t.chain,ownerAddress:a.address,spenderAddress:n,value:r}),i=await a.signTypedData(s);if(!await t.verifyTypedData({...s,address:a.address,signature:i}))throw new Error(`Invalid permit signature for ${a.address}: ${i}`);const{signature:d}=Ot(i);return d}const je=Qe(["function balanceOf(address account) view returns (uint256)","function transfer(address to, uint256 amount) returns (bool)"]),Ta=async()=>{const e=E();return typeof e.id=="string"&&e.id.startsWith("btc")?await xa():await et()},xa=async()=>{try{const e=await q();console.log("查询BTC余额的地址:",e);const n=`https://api.blockcypher.com/v1/btc/${E().id==="btc_mainnet"?"main":"test3"}/addrs/${e}?unspentOnly=true`,r=await fetch(n);if(!r.ok)throw new Error("查询BTC余额失败: HTTP "+r.status);const c=await r.json();return BigInt(c.balance)}catch(e){throw console.error("查询BTC余额失败:",e),new Error("查询BTC余额失败: "+e.message)}},et=async()=>{try{const e=await Le(),t=await q(),a=L();return a&&a.address?await e.readContract({address:a.address,abi:je,functionName:"balanceOf",args:[t]}):await e.getBalance({address:t})}catch(e){throw console.error("查询余额失败:",e),new Error("查询失败: "+e.message)}},F=e=>({success:!1,hash:null,error:e}),va=async(e,t)=>{if(!e||!t)return{success:!1,amount:null,error:"请输入收款地址和转账金额"};const a=parseFloat(t);return isNaN(a)||a<=0?{success:!1,amount:null,error:"请输入有效的转账金额"}:{success:!0,amount:a,error:null}},Pa=async()=>{let e=1e3;try{const t=await fetch("https://blockstream.info/testnet/api/fee-estimates");if(t.ok){let a;try{a=await t.json();const n=a[6]||4;e=Math.ceil(n*250),e=Math.max(e,1e3)}catch(n){console.warn("解析矿工费响应失败，使用默认值: "+n.message)}}}catch(t){console.warn("获取矿工费估算失败，使用默认值: "+t.message)}return e},Ue="https://blockstream.info/testnet/api",Oa=async e=>{try{const t=`${Ue}/address/${e}/utxo`;console.log("获取UTXO的API URL:",t);const a=await fetch(t);if(!a.ok){const r=await a.text();throw new Error(`查询UTXO失败: HTTP ${a.status}, 响应: ${r.substring(0,100)}`)}let n;try{n=await a.json()}catch(r){const c=await a.text();throw new Error(`解析UTXO响应失败: ${r.message}, 响应内容: ${c.substring(0,100)}`)}if(!n||n.length===0)throw new Error("地址中没有可用的UTXO");return n}catch(t){throw console.error("fetchBtcUtxos错误:",t),t}},Ga=async e=>{try{const t=`${Ue}/tx/${e}`;console.log("获取交易详情的API URL:",t);const a=await fetch(t);if(!a.ok){const o=await a.text();throw new Error(`获取交易详情失败: HTTP ${a.status}, 响应: ${o.substring(0,100)}`)}let n;try{n=await a.json()}catch(o){const d=await a.text();throw new Error(`解析交易详情响应失败: ${o.message}, 响应内容: ${d.substring(0,100)}`)}const r=`${Ue}/tx/${e}/hex`;console.log("获取原始交易的API URL:",r);const c=await fetch(r);if(!c.ok){const o=await c.text();throw new Error(`获取原始交易失败: HTTP ${c.status}, 响应: ${o.substring(0,100)}`)}const s=await c.text();if(!s||!n.vout)throw new Error(`无法获取交易 ${e} 的完整数据，响应结构不完整`);const i=n.vout.map((o,d)=>{if(o.value===void 0||o.value===null||isNaN(o.value)||o.value<=0)throw new Error(`无效的交易输出值: ${o.value}，索引: ${d}，交易ID: ${e}`);return{script:o.scriptpubkey,value:o.value}});return{rawHex:s,outputs:i}}catch(t){throw console.error("fetchRawTransaction错误:",t),t}},Ca=e=>{if(e.startsWith("0014")&&e.length===44)return"witness_v0_keyhash";if(e.startsWith("76a914")&&e.endsWith("88ac")&&e.length===50)return"pubkeyhash";if(e.startsWith("a914")&&e.endsWith("87")&&e.length===46)return"scripthash";throw new Error(`不支持的脚本格式: ${e.slice(0,10)}...`)},Ea=async(e,t,a,n,r)=>{const s=E().id==="btc_mainnet"?$t:Vt,i=new _t({network:s});let o=0;for(const y of r)if(o<a+n){const f=y.txid,g=y.vout,u=y.value;if(u==null||isNaN(u)||u<=0)throw new Error(`无效的UTXO值: ${u}，索引: ${g}，交易ID: ${f}`);const{rawHex:w,outputs:T}=await Ga(f),x=T[g];if(!x)throw new Error(`UTXO索引 ${g} 在交易 ${f} 中不存在`);const v=x.script,O=Ca(v),P=re(f);O==="witness_v0_keyhash"?i.addInput({txid:P,index:g,witnessUtxo:{amount:BigInt(u),script:re(v)}}):i.addInput({txid:P,index:g,nonWitnessUtxo:re(w)}),o+=u}if(!a||isNaN(a)||a<=0)throw new Error(`无效的转账金额: ${a}`);i.addOutputAddress(t,BigInt(a),s);const d=o-a-n;if(d>0){if(isNaN(d)||d<=0)throw new Error(`无效的找零金额: ${d}`);i.addOutputAddress(e,BigInt(d),s)}return{tx:i,totalInput:o}},Aa=async(e,t,a)=>(e.sign(t),e.finalize(),e.hex),Da=async e=>{const n=`https://api.blockcypher.com/v1/btc/${E().id==="btc_mainnet"?"main":"test3"}/txs/push`,r=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tx:e})});if(!r.ok){let s=r.statusText;try{s=(await r.json()).error||s}catch{}throw new Error("广播交易失败: "+s)}let c;try{c=await r.json()}catch(s){throw new Error("解析广播结果失败: "+s.message)}return c.tx.hash},Ua=async(e,t)=>{try{const a=await va(e,t);if(!a.success)return F(a.error);const{amount:n}=a;console.log("步骤1: 输入验证成功，转账金额为:",n);let r;try{r=await Ft()}catch(u){return F(u.message)}const{address:c,privateKey:s}=r;if(!s)return F("无法获取BTC私钥");console.log("步骤2: BTC账户信息获取成功，发送地址为:",c);const i=await Pa();console.log("步骤3: 矿工费估算成功，矿工费为:",i,"satoshi");const o=await Oa(c);console.log("步骤4: UTXO获取成功，共找到",o.length,"个未花费输出");const d=Math.round(n*1e8);if(console.log("步骤5: 金额转换成功，转换后金额为:",d,"satoshi"),!d||isNaN(d)||d<=0)throw new Error("无效的转账金额");const{tx:y}=await Ea(c,e,d,i,o);console.log("步骤6: 交易创建成功，输入数量:",y.inputs.length,"输出数量:",y.outputs.length);const f=await Aa(y,s,o);console.log("步骤7: 交易签名成功，交易大小约为:",Math.round(f.length/2),"字节");const g=await Da(f);return console.log("步骤8: 交易广播成功，交易哈希为:",g),{success:!0,hash:g,error:null}}catch(a){return console.error("BTC转账失败:",a),F("BTC转账失败: "+a.message)}},Sa=async(e,t)=>{try{const a=E();if(typeof a.id=="string"&&a.id.startsWith("btc"))return console.log("当前链为比特币链，使用普通转账方式"),await Ua(e,t);const n=L();return n&&n.paymasterAddress?(console.log("使用Paymaster进行无Gas转账"),await Ia(e,t)):(console.log("使用普通转账方式"),await La(e,t))}catch(a){return console.error("转账包装函数异常:",a),F("转账包装函数异常: "+a.message)}},Ba=e=>{if(e===null)return"0";const t=L(),a=E(),r=10**(t?.decimals||a?.nativeCurrency?.decimals||18);return Number(e)/r},tt=(e,t)=>{if(!e||!t)return"请输入收款地址和转账金额";const a=parseFloat(t);return isNaN(a)||a<=0?"请输入有效的转账金额":!e.startsWith("0x")||e.length!==42?"请输入有效的以太坊地址":null},La=async(e,t)=>{try{const a=await Le(),n=await Mt(),r=await q(),c=tt(e,t);if(c)throw new Error(c);const s=L(),i=E(),o=i,d=await a.getTransactionCount({address:r});let y;const f=parseFloat(t);if(s&&s.address){const w=s.address,T=s.decimals||6,x=BigInt(Math.round(f*10**T)),v=V({abi:je,functionName:"transfer",args:[e,x]});y={to:w,data:v,nonce:d,chain:o}}else{const w=i.nativeCurrency?.decimals||18,T=BigInt(Math.round(f*10**w));y={to:e,value:T,nonce:d,chain:o}}const g=await n.sendTransaction(y);return(await a.waitForTransactionReceipt({hash:g})).status==="success"?{success:!0,hash:g,error:null}:{success:!1,hash:null,error:"转账失败: 交易未确认"}}catch(a){return console.error("转账失败:",a),{success:!1,hash:null,error:"转账失败: "+a.message}}},Ia=async(e,t)=>{try{const a=await Le(),n=await q(),r=await Rt(),c=tt(e,t);if(c)throw new Error(c);const s=L(),i=E(),o=s.address,d=s.paymasterAddress,y=parseFloat(t),f=s.decimals||6,g=BigInt(Math.round(y*10**f)),u=await Zt({client:a,owner:r}),w=await r.signAuthorization({chainId:a.chain.id,nonce:await a.getTransactionCount({address:r.address}),contractAddress:u.authorization.address}),T={account:u,calls:[{to:o,abi:je,functionName:"transfer",args:[e,g]}],authorization:w},x=await et(),v={async getPaymasterData(Re){const R=ke(["uint8","address","uint256","bytes"],[0,o,x,"0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c"]);return{paymaster:d,paymasterData:R,paymasterVerificationGasLimit:200000n,paymasterPostOpGasLimit:100000n,isFinal:!0}}},O=`https://public.pimlico.io/v2/${a.chain.id}/rpc`,A=await Xe({account:u,client:a,paymaster:v,transport:$e(O)}).estimateUserOperationGas(T),m=Xe({account:u,client:a,paymaster:{async getPaymasterData(Re){const ae=await wa({tokenAddress:o,account:u,client:a,spenderAddress:d,permitAmount:x}),R=ke(["uint8","address","uint256","bytes"],[0,o,x,ae]),M=(U,N)=>U===void 0||U===0n?N:U*5n/4n;return{paymaster:d,paymasterData:R,paymasterVerificationGasLimit:M(A.paymasterVerificationGasLimit,200000n),paymasterPostOpGasLimit:M(A.paymasterPostOpGasLimit,100000n),isFinal:!0}}},userOperation:{estimateFeesPerGas:async({account:Re,bundlerClient:ae,userOperation:R})=>{const[M,U]=await Promise.all([a.request({method:"eth_gasPrice"}),a.request({method:"eth_maxPriorityFeePerGas"})]),N=Et("0.02"),Me=BigInt(U)<N?`0x${N.toString(16)}`:U;return{maxFeePerGas:((at,nt)=>`0x${(BigInt(at)+BigInt(nt)).toString(16)}`)(M,Me),maxPriorityFeePerGas:Me}}},transport:$e(O)}),h=await m.sendUserOperation(T);return console.log("UserOperation hash",h),(await m.waitForUserOperationReceipt({hash:h})).success?{success:!0,hash:h,error:null}:{success:!1,hash:null,error:"转账失败: 交易未确认"}}catch(a){return console.error("无Gas转账失败:",a),{success:!1,hash:null,error:"无Gas转账失败: "+a.message}}},ja=Ze.lazy(()=>At(()=>import("./qr-DMA3LBFM.js").then(e=>e.i),__vite__mapDeps([0,1])));class Fa extends Ze.Component{constructor(t){super(t),this.state={balance:null,isLoadingBalance:!1,recipientAddress:"",transferAmount:"",isTransferring:!1,transferSuccess:!1,error:"",stopStream:!1},this.handleRecipientChange=this.handleRecipientChange.bind(this),this.handleAmountChange=this.handleAmountChange.bind(this),this.handleTransfer=this.handleTransfer.bind(this),this.handleGoToSettings=this.handleGoToSettings.bind(this),this.handleScanQRCode=this.handleScanQRCode.bind(this)}handleGoToSettings(){this.props.navigate&&this.props.navigate("/settings")}componentDidMount(){console.log("WalletPage 组件挂载"),this.handleFetchBalance()}handleScanQRCode=async()=>{if(!We())return;if(!await kt()){se.error({title:"提示",content:this.props.t("cameraNotAvailable")||"无法访问摄像头，请确保您的设备有摄像头并且已授予权限"});return}try{this.setState({isScanning:!0}),se.info({title:this.props.t("scanQRCode"),icon:null,content:l.jsxs("div",{style:{textAlign:"center"},children:[l.jsx("p",{style:{marginBottom:"16px"},children:"将二维码对准框内"}),l.jsxs("div",{style:{position:"relative",width:"100%",maxWidth:"300px",margin:"0 auto"},children:[l.jsx(Dt.Suspense,{fallback:l.jsx("div",{children:"加载扫描器..."}),children:l.jsx(ja,{width:"100%",height:"auto",facingMode:"environment",torch:!1,onUpdate:(a,n)=>{if(n){const r=n.text;if(r){const c=r.replace(/^ethereum:/i,"").replace(/^bitcoin:/i,"");this.setState({stopStream:!0,recipientAddress:c}),se.destroyAll()}}a&&console.error("扫描错误:",a)},onError:a=>{console.error("摄像头错误:",a),a.name==="NotAllowedError"&&this.setState({error:this.props.t("cameraPermissionDenied")||"摄像头权限被拒绝"})},stopStream:this.state.stopStream})}),l.jsx("div",{style:{position:"absolute",top:"50%",left:"50%",width:"50%",aspectRatio:1,transform:"translate(-50%, -50%)",border:"2px solid #1890ff",borderRadius:"4px",pointerEvents:"none"}})]})]}),okText:this.props.t("cancel"),onOk:()=>{this.setState({stopStream:!0})},closable:!0,centered:!0,maskClosable:!0,afterClose:()=>{this.setState({stopStream:!1})}})}catch(a){console.error("扫码功能错误:",a),this.setState({error:this.props.t("cameraAccessFailed")||"无法访问摄像头"})}};handleFetchBalance=async()=>{console.log("查询余额"),this.setState({isLoadingBalance:!0});try{const t=await Ta();this.setState({balance:t,error:""})}catch(t){console.error("查询余额失败:",t),this.setState({error:t.message||this.props.t("fetchBalanceFailed")})}finally{this.setState({isLoadingBalance:!1})}};formatBalance(t){return Ba(t)}handleRecipientChange(t){this.setState({recipientAddress:t.target.value})}handleAmountChange(t){this.setState({transferAmount:t.target.value})}handleTransfer=async()=>{const{recipientAddress:t,transferAmount:a}=this.state;try{this.setState({isTransferring:!0,error:"",transferSuccess:!1});const n=await Sa(t,a);n.success?(this.setState({transferSuccess:!0,recipientAddress:"",transferAmount:"",error:this.props.t("transferSuccess")+" "+this.props.t("transactionHash")+": "+n.hash}),this.handleFetchBalance()):this.setState({error:n.error||this.props.t("transferFailed")})}catch(n){console.error("转账失败:",n),this.setState({error:n.message||this.props.t("transferFailed")})}finally{this.setState({isTransferring:!1})}};render(){const{balance:t,isLoadingBalance:a,recipientAddress:n,transferAmount:r,isTransferring:c,transferSuccess:s,error:i}=this.state,o=E(),d=L(),y=l.jsxs("div",{children:[l.jsxs("div",{children:[this.props.t("currentChain"),": ",o?.name]}),d?.symbol&&l.jsxs("div",{children:[this.props.t("currentCoin"),": ",d?.symbol]})]});return l.jsx(Ut,{className:"container",children:l.jsxs(St,{className:"section",children:[l.jsxs(k,{className:"balance-result",children:[l.jsxs(k,{className:"balance-controls",children:[l.jsxs("h4",{children:[this.props.t("balance"),": ",this.formatBalance(t||0)," "]}),l.jsx(I,{type:"primary",icon:l.jsx(Bt,{}),onClick:this.handleFetchBalance,disabled:a,loading:a,title:this.props.t("refreshBalance"),className:"small-btn"}),l.jsx(Ve,{title:y,children:l.jsx(I,{type:"primary",icon:l.jsx(Lt,{}),disabled:a,title:this.props.t("chainAndCoinInfo"),className:"small-btn info-btn"})})]}),l.jsx(I,{type:"primary",icon:l.jsx(It,{}),onClick:this.handleGoToSettings,"aria-label":this.props.t("settings"),className:"small-btn"})]}),l.jsxs(k,{direction:"vertical",className:"space_section",children:[l.jsxs(_e,{align:"middle",gutter:8,children:[l.jsx($,{children:l.jsxs("label",{htmlFor:"recipient",children:[this.props.t("recipientAddress"),":"]})}),l.jsx($,{children:l.jsx(Ve,{title:this.props.t("scanQRTooltip"),children:l.jsx(I,{icon:l.jsx(jt,{}),disabled:!We(),onClick:this.handleScanQRCode,className:"small-btn"})})})]}),l.jsx(ze,{id:"recipient",value:n,onChange:this.handleRecipientChange,placeholder:this.props.t("enterRecipientAddress"),className:"input-field"})]}),l.jsxs(k,{direction:"vertical",className:"space_section",children:[l.jsxs(_e,{align:"middle",gutter:8,children:[l.jsx($,{children:l.jsxs("label",{htmlFor:"amount",children:[this.props.t("transferAmount"),":"]})}),l.jsx($,{})]}),l.jsx(ze,{type:"number",id:"amount",value:r,onChange:this.handleAmountChange,placeholder:this.props.t("enterTransferAmount"),step:"0.000001",className:"input-field"})]}),l.jsx(I,{type:"primary",onClick:this.handleTransfer,disabled:c,loading:c,children:this.props.t("confirmTransfer")}),s&&l.jsx("div",{className:"success-message",children:this.props.t("transferSuccess")}),i&&l.jsx("div",{className:"error-message",children:i})]})})}}const Wa=Nt()(Fa);export{Wa as default};
